# This file is managed by macpro-mdct-core so if you'd like to change it let's do it there
name: PR Notification

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: write
  id-token: write
  issues: write
  pull-requests: write

jobs:
  endpoint:
    name: Endpoint
    outputs:
      application_endpoint_url: ${{ steps.cloudfront-endpoint.outputs.application_endpoint_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set branch_name
        run: |
          BRANCH_NAME=$(./.github/setBranchName.sh ${{ github.event.pull_request.head.ref }})
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Set branch-specific variable names
        run: ./.github/buildVars.sh set_names

      - name: Set branch-specific variable values
        run: ./.github/buildVars.sh set_values

      - name: Configure AWS credentials for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Get CloudFront endpoint
        id: cloudfront-endpoint
        run: |
          set -eo pipefail
          application_endpoint_url=$(
            aws cloudformation describe-stacks \
              --stack-name "$STACK_NAME" \
              --output text \
              --query "Stacks[0].Outputs[?OutputKey=='CloudFrontUrl'].OutputValue" 2>/dev/null || true
          )
          if [[ -z "$application_endpoint_url" || ! "$application_endpoint_url" =~ ^https?:// ]]; then
            application_endpoint_url="N/A"
          fi
          echo "application_endpoint_url=$application_endpoint_url" >> $GITHUB_OUTPUT
        env:
          STACK_NAME: ${{ vars.APP_NAME_LOWER }}-${{ env.branch_name }}

  notify_integrations_channel:
    name: Notify integrations channel
    if: >
      github.actor != 'dependabot[bot]' &&
      github.actor != 'github-actions[bot]' &&
      github.actor != 'mdct-github-service-account' &&
      !github.event.pull_request.draft
    needs: endpoint
    runs-on: ubuntu-latest
    steps:
      - name: Slack notification
        uses: rtCamp/action-slack-notify@v2
    env:
      MSG_MINIMAL: true
      SLACK_MESSAGE: |
        ${{ github.event.pull_request.html_url }}
        Cloudfront URL: ${{ needs.endpoint.outputs.application_endpoint_url }}
      SLACK_TITLE: |
        :github: A new pull request has been created in ${{ github.repository }} by ${{ github.event.pull_request.user.login }}
      SLACK_WEBHOOK: ${{ secrets.INTEGRATIONS_SLACK_WEBHOOK }}
