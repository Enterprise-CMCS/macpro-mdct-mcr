service: database

frameworkVersion: "4"

plugins:
  - serverless-dynamodb
  - serverless-stack-termination-protection
  - serverless-offline

custom:
  project: "mcr"
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  serverlessTerminationProtection:
    stages:
      - nonsense
  dotenv:
    path: ../../.env
  bannerTableName: ${self:custom.stage}-banners
  formTemplateTableName: ${self:custom.stage}-form-template-versions
  mcparReportTableName: ${self:custom.stage}-mcpar-reports
  mcparFormBucket: ${env:MCPAR_FORM_BUCKET, "${self:service}-${self:custom.stage}-mcpar"}
  mlrReportTableName: ${self:custom.stage}-mlr-reports
  mlrFormBucket: ${env:MLR_FORM_BUCKET, "${self:service}-${self:custom.stage}-mlr"}
  naaarReportTableName: ${self:custom.stage}-naaar-reports
  naaarFormBucket: ${env:NAAAR_FORM_BUCKET, "${self:service}-${self:custom.stage}-naaar"}
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true
provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stackTags:
    PROJECT: ${self:custom.project}
    SERVICE: ${self:service}

resources:
  Resources:
    BannerTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.bannerTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    McparReportTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.mcparReportTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: state
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: state
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    McparFormBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: !Sub ${self:service}-${self:custom.stage}-mcpar
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        VersioningConfiguration:
          Status: Enabled
        LoggingConfiguration:
          DestinationBucketName: ${env:LOGGING_BUCKET, ssm:/configuration/${self:custom.stage}/s3/accessLogsBucket, ssm:/configuration/default/s3/accessLogsBucket}
          LogFilePrefix: ${env:LOGGING_BUCKET, ssm:/configuration/${self:custom.stage}/s3/accessLogsPrefix, ssm:/configuration/default/s3/accessLogsPrefix}
    McparFormPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref McparFormBucket
        PolicyDocument:
          Statement:
            - Sid: "AllowSSLRequestsOnly"
              Effect: Deny
              Action: "s3:*"
              Principal: "*"
              Resource:
                - !Sub arn:aws:s3:::${McparFormBucket}/*
                - !Sub arn:aws:s3:::${McparFormBucket}
              Condition:
                Bool:
                  aws:SecureTransport: false
    MlrReportTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.mlrReportTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: state
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: state
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    MlrFormBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: !Sub ${self:service}-${self:custom.stage}-mlr
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        VersioningConfiguration:
          Status: Enabled
        LoggingConfiguration:
          DestinationBucketName: ${env:LOGGING_BUCKET, ssm:/configuration/${self:custom.stage}/s3/accessLogsBucket, ssm:/configuration/default/s3/accessLogsBucket}
          LogFilePrefix: ${env:LOGGING_BUCKET, ssm:/configuration/${self:custom.stage}/s3/accessLogsPrefix, ssm:/configuration/default/s3/accessLogsPrefix}
    MlrFormPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref MlrFormBucket
        PolicyDocument:
          Statement:
            - Sid: "AllowSSLRequestsOnly"
              Effect: Deny
              Action: "s3:*"
              Principal: "*"
              Resource:
                - !Sub arn:aws:s3:::${MlrFormBucket}/*
                - !Sub arn:aws:s3:::${MlrFormBucket}
              Condition:
                Bool:
                  aws:SecureTransport: false
    NaaarReportTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.naaarReportTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: state
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: state
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    NaaarFormBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: !Sub ${self:service}-${self:custom.stage}-naaar
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        VersioningConfiguration:
          Status: Enabled
        LoggingConfiguration:
          DestinationBucketName: ${env:LOGGING_BUCKET, ssm:/configuration/${self:custom.stage}/s3/accessLogsBucket, ssm:/configuration/default/s3/accessLogsBucket}
          LogFilePrefix: ${env:LOGGING_BUCKET, ssm:/configuration/${self:custom.stage}/s3/accessLogsPrefix, ssm:/configuration/default/s3/accessLogsPrefix}
    NaaarFormPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref NaaarFormBucket
        PolicyDocument:
          Statement:
            - Sid: "AllowSSLRequestsOnly"
              Effect: Deny
              Action: "s3:*"
              Principal: "*"
              Resource:
                - !Sub arn:aws:s3:::${NaaarFormBucket}/*
                - !Sub arn:aws:s3:::${NaaarFormBucket}
              Condition:
                Bool:
                  aws:SecureTransport: false
    FormTemplateVersionsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.formTemplateTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
        LocalSecondaryIndexes:
          - IndexName: LastAlteredIndex
            KeySchema:
              - AttributeName: reportType
                KeyType: HASH
              - AttributeName: lastAltered
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: IdIndex
            KeySchema:
              - AttributeName: reportType
                KeyType: HASH
              - AttributeName: id
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: HashIndex
            KeySchema:
              - AttributeName: reportType
                KeyType: HASH
              - AttributeName: md5Hash
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        KeySchema:
          - AttributeName: reportType
            KeyType: HASH
          - AttributeName: versionNumber
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: reportType
            AttributeType: S
          - AttributeName: versionNumber
            AttributeType: N
          - AttributeName: lastAltered
            AttributeType: S
          - AttributeName: id
            AttributeType: S
          - AttributeName: md5Hash
            AttributeType: S

  Outputs:
    BannerTableName:
      Value: !Ref BannerTable
    BannerTableArn:
      Value: !GetAtt BannerTable.Arn
    BannerTableStreamArn:
      Value: !GetAtt BannerTable.StreamArn
    FormTemplateTableName:
      Value: !Ref FormTemplateVersionsTable
    McparReportTableName:
      Value: !Ref McparReportTable
    McparReportTableArn:
      Value: !GetAtt McparReportTable.Arn
    McparReportTableStreamArn:
      Value: !GetAtt McparReportTable.StreamArn
    McparFormBucketName:
      Value: !Ref McparFormBucket
    McparFormBucketArn:
      Value: !GetAtt McparFormBucket.Arn
    MlrReportTableName:
      Value: !Ref MlrReportTable
    MlrReportTableArn:
      Value: !GetAtt MlrReportTable.Arn
    MlrReportTableStreamArn:
      Value: !GetAtt MlrReportTable.StreamArn
    MlrFormBucketName:
      Value: !Ref MlrFormBucket
    MlrFormBucketArn:
      Value: !GetAtt MlrFormBucket.Arn
    NaaarReportTableName:
      Value: !Ref NaaarReportTable
    NaaarReportTableArn:
      Value: !GetAtt NaaarReportTable.Arn
    NaaarReportTableStreamArn:
      Value: !GetAtt NaaarReportTable.StreamArn
    NaaarFormBucketName:
      Value: !Ref NaaarFormBucket
    NaaarFormBucketArn:
      Value: !GetAtt NaaarFormBucket.Arn
    Region:
      Value: !Sub ${AWS::Region}
