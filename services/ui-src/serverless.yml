service: ui-src

frameworkVersion: "3"

plugins:
  - serverless-plugin-scripts
  - serverless-s3-sync
  - serverless-stack-termination-protection
  - serverless-s3-bucket-helper
  - serverless-cloudfront-invalidate

s3BucketHelper:
  loggingConfiguration:
    destinationBucketName: ${env:LOGGING_BUCKET, ssm:/configuration/${self:custom.stage}/s3/accessLogsBucket, ssm:/configuration/default/s3/accessLogsBucket}
    logFilePrefix: ${env:LOGGING_BUCKET, ssm:/configuration/${self:custom.stage}/s3/accessLogsPrefix, ssm:/configuration/default/s3/accessLogsPrefix}

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  serverlessTerminationProtection:
    stages:
      - main
      - val
      - production
  api_region: ${cf:app-api-${self:custom.stage}.Region}
  api_url: ${cf:app-api-${self:custom.stage}.ApiGatewayRestApiUrl}
  application_endpoint: ${env:APPLICATION_ENDPOINT, ssm:/${self:custom.stage}/ui/application_endpoint, ssm:/default/ui/application_endpoint}
  cognito_region: ${cf:ui-auth-${self:custom.stage}.Region}
  cognito_identity_pool_id: ${cf:ui-auth-${self:custom.stage}.IdentityPoolId}
  cognito_user_pool_id: ${cf:ui-auth-${self:custom.stage}.UserPoolId}
  cognito_user_pool_client_id: ${cf:ui-auth-${self:custom.stage}.UserPoolClientId}
  cognito_user_pool_client_domain: ${cf:ui-auth-${self:custom.stage}.UserPoolClientDomain}
  cognito_idp_name: ${env:COGNITO_IDP_NAME, ssm:/${self:custom.stage}/ui-auth/cognito_idp_name, ssm:/default/ui-auth/cognito_idp_name}
  cognito_idp: ${cf:ui-auth-${self:custom.stage}.IdentityProvider}
  ldSdkClient: ${env:REACT_APP_LD_SDK_CLIENT, ssm:/${self:custom.stage}/launchdarkly/client, ssm:/default/launchdarkly/client}
  s3_attachments_bucket_region: ${cf:uploads-${self:custom.stage}.Region}
  s3_attachments_bucket_name: ${cf:uploads-${self:custom.stage}.AttachmentsBucketName}
  ui_s3_bucket_name: ${cf:ui-${self:custom.stage}.S3BucketName}
  ui_cloudfront_distribution_id: ${cf:ui-${self:custom.stage}.CloudFrontDistributionId}
  application_endpoint_url: ${cf:ui-${self:custom.stage}.ApplicationEndpointUrl}
  signout_redirect_url: ${env:POST_SIGNOUT_REDIRECT, ssm:/configuration/${self:custom.stage}/cognito/redirectSignout, ssm:/configuration/default/cognito/redirectSignout}
  application_signout_url: ${self:custom.application_endpoint_url}postLogout
  s3Sync:
    - bucketName: ${self:custom.ui_s3_bucket_name}
      localDir: ./build
      deleteRemoved: true
  cloudfrontInvalidate:
    - distributionId: ${self:custom.ui_cloudfront_distribution_id}
      items:
        - "/*"
  scripts:
    hooks:
      # Build the static archive and populate the config
      package:initialize: |
        set -e
        SKIP_PREFLIGHT_CHECK=true yarn run build
        export API_REGION=${self:custom.api_region}
        export API_URL=${self:custom.api_url}
        export APPLICATION_ENDPOINT=${self:custom.application_endpoint}
        export COGNITO_REGION=${self:custom.cognito_region}
        export COGNITO_IDENTITY_POOL_ID=${self:custom.cognito_identity_pool_id}
        export COGNITO_USER_POOL_ID=${self:custom.cognito_user_pool_id}
        export COGNITO_USER_POOL_CLIENT_ID=${self:custom.cognito_user_pool_client_id}
        export COGNITO_USER_POOL_CLIENT_DOMAIN=${self:custom.cognito_user_pool_client_domain}
        export COGNITO_IDP_NAME=${self:custom.cognito_idp_name}
        export COGNITO_IDP=${self:custom.cognito_idp}
        export COGNITO_REDIRECT_SIGNIN=${self:custom.application_endpoint_url}
        export COGNITO_REDIRECT_SIGNOUT=${self:custom.application_signout_url}
        export POST_SIGNOUT_REDIRECT=${self:custom.signout_redirect_url}
        export REACT_APP_LD_SDK_CLIENT=${self:custom.ldSdkClient}
        export S3_ATTACHMENTS_BUCKET_REGION=${self:custom.s3_attachments_bucket_region}
        export S3_ATTACHMENTS_BUCKET_NAME=${self:custom.s3_attachments_bucket_name}
        export STAGE=${self:custom.stage}
        export LOCAL_LOGIN=false
        ./scripts/configure-env.sh
        cp public/env-config.js build/env-config.js
